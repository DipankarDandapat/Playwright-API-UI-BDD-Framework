[
{"keyword": "Feature", "name": "Todos API Testing", "tags": ["api"], "location": "features/Todos_API_Testing.feature:2", "status": "failed", "description": ["As a QA engineer", "I want to test the Todos REST API thoroughly", "So that I can ensure its functionality and data integrity"], "elements": [{"type": "background", "keyword": "Background", "name": "", "location": "features/Todos_API_Testing.feature:7", "steps": [{"keyword": "Given", "step_type": "given", "name": "the API client is configured for the Todos API in the testing environment", "location": "features/Todos_API_Testing.feature:8"}]}, {"type": "scenario", "keyword": "Scenario", "name": "Get all todos from FreeAPI", "tags": ["smoke", "todos", "freeapi"], "location": "features/Todos_API_Testing.feature:13", "steps": [{"keyword": "Given", "step_type": "given", "name": "the API client is configured for the Todos API in the testing environment", "location": "features/Todos_API_Testing.feature:8", "match": {"location": "features/steps/Todos_API_Testing_Steps.py:13", "arguments": []}, "result": {"status": "passed", "duration": 0.0009951591491699219}}, {"keyword": "When", "step_type": "when", "name": "I send GET request to \"api/v1/todos\"", "location": "features/Todos_API_Testing.feature:14", "match": {"location": "features/steps/Todos_API_Testing_Steps.py:29", "arguments": [{"value": "api/v1/todos", "name": "endpoint"}]}, "result": {"status": "passed", "duration": 1.4448411464691162}}, {"keyword": "Then", "step_type": "then", "name": "the response status code should be 400", "location": "features/Todos_API_Testing.feature:15", "match": {"location": "features/steps/Todos_API_Testing_Steps.py:66", "arguments": [{"value": 400, "name": "status_code", "original": "400"}]}, "result": {"status": "failed", "duration": 0.006690025329589844, "error_message": "ASSERT FAILED: Expected status 400, but got 200"}}, {"keyword": "And", "step_type": "then", "name": "the response should contain todos data structure", "location": "features/Todos_API_Testing.feature:16"}, {"keyword": "And", "step_type": "then", "name": "the response should have \"success\" field as true", "location": "features/Todos_API_Testing.feature:17"}, {"keyword": "And", "step_type": "then", "name": "the response should have \"data\" field containing todos list", "location": "features/Todos_API_Testing.feature:18"}], "status": "failed"}, {"type": "scenario", "keyword": "Scenario", "name": "Create a new todo via FreeAPI", "tags": ["smoke", "todo_creation", "freeapi"], "location": "features/Todos_API_Testing.feature:21", "steps": [{"keyword": "Given", "step_type": "given", "name": "the API client is configured for the Todos API in the testing environment", "location": "features/Todos_API_Testing.feature:8", "match": {"location": "features/steps/Todos_API_Testing_Steps.py:13", "arguments": []}, "result": {"status": "passed", "duration": 0.0007381439208984375}}, {"keyword": "Given", "step_type": "given", "name": "I have valid todo data", "location": "features/Todos_API_Testing.feature:22", "table": {"headings": ["field", "value"], "rows": [["title", "Test Todo for API Automation"], ["description", "This is a test todo via API"]]}, "match": {"location": "features/steps/Todos_API_Testing_Steps.py:155", "arguments": []}, "result": {"status": "passed", "duration": 0.0015022754669189453}}, {"keyword": "When", "step_type": "when", "name": "I send POST request to \"api/v1/todos\" with the todo data", "location": "features/Todos_API_Testing.feature:26", "match": {"location": "features/steps/Todos_API_Testing_Steps.py:167", "arguments": [{"value": "api/v1/todos", "name": "endpoint"}]}, "result": {"status": "passed", "duration": 0.0855708122253418}}, {"keyword": "Then", "step_type": "then", "name": "the response status code should be 201", "location": "features/Todos_API_Testing.feature:27", "match": {"location": "features/steps/Todos_API_Testing_Steps.py:66", "arguments": [{"value": 201, "name": "status_code", "original": "201"}]}, "result": {"status": "passed", "duration": 0.0010707378387451172}}, {"keyword": "And", "step_type": "then", "name": "the response should contain the created todo details", "location": "features/Todos_API_Testing.feature:28", "match": {"location": "features/steps/Todos_API_Testing_Steps.py:204", "arguments": []}, "result": {"status": "passed", "duration": 0.0054056644439697266}}, {"keyword": "And", "step_type": "then", "name": "the todo should have a generated \"_id\"", "location": "features/Todos_API_Testing.feature:29", "match": {"location": "features/steps/Todos_API_Testing_Steps.py:512", "arguments": []}, "result": {"status": "passed", "duration": 0.006025791168212891}}, {"keyword": "And", "step_type": "then", "name": "the todo \"title\" should match the input data", "location": "features/Todos_API_Testing.feature:30", "match": {"location": "features/steps/Todos_API_Testing_Steps.py:535", "arguments": [{"value": "title", "name": "field"}]}, "result": {"status": "passed", "duration": 0.005089759826660156}}, {"keyword": "And", "step_type": "then", "name": "the todo \"description\" should match the input data", "location": "features/Todos_API_Testing.feature:31", "match": {"location": "features/steps/Todos_API_Testing_Steps.py:535", "arguments": [{"value": "description", "name": "field"}]}, "result": {"status": "passed", "duration": 0.005779266357421875}}, {"keyword": "And", "step_type": "then", "name": "the todo \"isComplete\" should be \"false\"", "location": "features/Todos_API_Testing.feature:32", "match": {"location": "features/steps/Todos_API_Testing_Steps.py:562", "arguments": [{"value": "isComplete", "name": "field"}, {"value": "false", "name": "expected_value"}]}, "result": {"status": "passed", "duration": 0.0058841705322265625}}], "status": "passed"}, {"type": "scenario", "keyword": "Scenario", "name": "Retrieve specific todo by ID", "tags": ["regression", "todo_retrieval", "freeapi"], "location": "features/Todos_API_Testing.feature:35", "steps": [{"keyword": "Given", "step_type": "given", "name": "the API client is configured for the Todos API in the testing environment", "location": "features/Todos_API_Testing.feature:8", "match": {"location": "features/steps/Todos_API_Testing_Steps.py:13", "arguments": []}, "result": {"status": "passed", "duration": 0.0005433559417724609}}, {"keyword": "Given", "step_type": "given", "name": "I have created a todo via FreeAPI", "location": "features/Todos_API_Testing.feature:36", "match": {"location": "features/steps/Todos_API_Testing_Steps.py:585", "arguments": []}, "result": {"status": "passed", "duration": 0.036318302154541016}}, {"keyword": "When", "step_type": "when", "name": "I send GET request to \"api/v1/todos/{todo_id}\"", "location": "features/Todos_API_Testing.feature:37", "match": {"location": "features/steps/Todos_API_Testing_Steps.py:29", "arguments": [{"value": "api/v1/todos/{todo_id}", "name": "endpoint"}]}, "result": {"status": "passed", "duration": 0.0429837703704834}}, {"keyword": "Then", "step_type": "then", "name": "the response status code should be 200", "location": "features/Todos_API_Testing.feature:38", "match": {"location": "features/steps/Todos_API_Testing_Steps.py:66", "arguments": [{"value": 200, "name": "status_code", "original": "200"}]}, "result": {"status": "passed", "duration": 0.0015399456024169922}}, {"keyword": "And", "step_type": "then", "name": "the response should contain todo details", "location": "features/Todos_API_Testing.feature:39", "match": {"location": "features/steps/Todos_API_Testing_Steps.py:620", "arguments": []}, "result": {"status": "passed", "duration": 0.008592844009399414}}, {"keyword": "And", "step_type": "then", "name": "the todo \"_id\" should match the requested ID", "location": "features/Todos_API_Testing.feature:40", "match": {"location": "features/steps/Todos_API_Testing_Steps.py:643", "arguments": []}, "result": {"status": "passed", "duration": 0.0072286128997802734}}, {"keyword": "And", "step_type": "then", "name": "the todo should have all required fields populated", "location": "features/Todos_API_Testing.feature:41", "match": {"location": "features/steps/Todos_API_Testing_Steps.py:666", "arguments": []}, "result": {"status": "passed", "duration": 0.006734132766723633}}], "status": "passed"}, {"type": "scenario", "keyword": "Scenario", "name": "Update todo information", "tags": ["regression", "todo_update", "freeapi"], "location": "features/Todos_API_Testing.feature:44", "steps": [{"keyword": "Given", "step_type": "given", "name": "the API client is configured for the Todos API in the testing environment", "location": "features/Todos_API_Testing.feature:8", "match": {"location": "features/steps/Todos_API_Testing_Steps.py:13", "arguments": []}, "result": {"status": "passed", "duration": 0.0007717609405517578}}, {"keyword": "Given", "step_type": "given", "name": "I have created a todo via FreeAPI", "location": "features/Todos_API_Testing.feature:45", "match": {"location": "features/steps/Todos_API_Testing_Steps.py:585", "arguments": []}, "result": {"status": "passed", "duration": 0.035364389419555664}}, {"keyword": "When", "step_type": "when", "name": "I send PATCH request to \"api/v1/todos/{todo_id}\" with updated data", "location": "features/Todos_API_Testing.feature:46", "table": {"headings": ["field", "value"], "rows": [["title", "Updated Todo Title"], ["description", "Updated todo description"]]}, "match": {"location": "features/steps/Todos_API_Testing_Steps.py:352", "arguments": [{"value": "api/v1/todos/{todo_id}", "name": "endpoint"}]}, "result": {"status": "passed", "duration": 0.03763127326965332}}, {"keyword": "Then", "step_type": "then", "name": "the response status code should be 200", "location": "features/Todos_API_Testing.feature:50", "match": {"location": "features/steps/Todos_API_Testing_Steps.py:66", "arguments": [{"value": 200, "name": "status_code", "original": "200"}]}, "result": {"status": "passed", "duration": 0.0016117095947265625}}, {"keyword": "And", "step_type": "then", "name": "the response should contain updated todo details", "location": "features/Todos_API_Testing.feature:51", "match": {"location": "features/steps/Todos_API_Testing_Steps.py:699", "arguments": []}, "result": {"status": "passed", "duration": 0.008241653442382812}}, {"keyword": "And", "step_type": "then", "name": "the todo \"title\" should be \"Updated Todo Title\"", "location": "features/Todos_API_Testing.feature:52", "match": {"location": "features/steps/Todos_API_Testing_Steps.py:562", "arguments": [{"value": "title", "name": "field"}, {"value": "Updated Todo Title", "name": "expected_value"}]}, "result": {"status": "passed", "duration": 0.008502960205078125}}, {"keyword": "And", "step_type": "then", "name": "the todo \"description\" should be \"Updated todo description\"", "location": "features/Todos_API_Testing.feature:53", "match": {"location": "features/steps/Todos_API_Testing_Steps.py:562", "arguments": [{"value": "description", "name": "field"}, {"value": "Updated todo description", "name": "expected_value"}]}, "result": {"status": "passed", "duration": 0.00933980941772461}}], "status": "passed"}, {"type": "scenario", "keyword": "Scenario", "name": "Toggle todo completion status", "tags": ["regression", "todo_status_toggle", "freeapi"], "location": "features/Todos_API_Testing.feature:56", "steps": [{"keyword": "Given", "step_type": "given", "name": "the API client is configured for the Todos API in the testing environment", "location": "features/Todos_API_Testing.feature:8", "match": {"location": "features/steps/Todos_API_Testing_Steps.py:13", "arguments": []}, "result": {"status": "passed", "duration": 0.0008819103240966797}}, {"keyword": "Given", "step_type": "given", "name": "I have created a todo via FreeAPI", "location": "features/Todos_API_Testing.feature:57", "match": {"location": "features/steps/Todos_API_Testing_Steps.py:585", "arguments": []}, "result": {"status": "passed", "duration": 0.039916038513183594}}, {"keyword": "When", "step_type": "when", "name": "I send PATCH request to \"api/v1/todos/toggle/status/{todo_id}\"", "location": "features/Todos_API_Testing.feature:58", "match": {"location": "features/steps/Todos_API_Testing_Steps.py:298", "arguments": [{"value": "api/v1/todos/toggle/status/{todo_id}", "name": "endpoint"}]}, "result": {"status": "passed", "duration": 0.05257272720336914}}, {"keyword": "Then", "step_type": "then", "name": "the response status code should be 200", "location": "features/Todos_API_Testing.feature:59", "match": {"location": "features/steps/Todos_API_Testing_Steps.py:66", "arguments": [{"value": 200, "name": "status_code", "original": "200"}]}, "result": {"status": "passed", "duration": 0.0018248558044433594}}, {"keyword": "And", "step_type": "then", "name": "the response should contain updated todo details", "location": "features/Todos_API_Testing.feature:60", "match": {"location": "features/steps/Todos_API_Testing_Steps.py:699", "arguments": []}, "result": {"status": "passed", "duration": 0.005727052688598633}}, {"keyword": "And", "step_type": "then", "name": "the todo completion status should be toggled", "location": "features/Todos_API_Testing.feature:61", "match": {"location": "features/steps/Todos_API_Testing_Steps.py:777", "arguments": []}, "result": {"status": "passed", "duration": 0.00630497932434082}}], "status": "passed"}, {"type": "scenario", "keyword": "Scenario", "name": "Delete todo", "tags": ["regression", "todo_deletion", "freeapi"], "location": "features/Todos_API_Testing.feature:64", "steps": [{"keyword": "Given", "step_type": "given", "name": "the API client is configured for the Todos API in the testing environment", "location": "features/Todos_API_Testing.feature:8", "match": {"location": "features/steps/Todos_API_Testing_Steps.py:13", "arguments": []}, "result": {"status": "passed", "duration": 0.0009663105010986328}}, {"keyword": "Given", "step_type": "given", "name": "I have created a todo via FreeAPI", "location": "features/Todos_API_Testing.feature:65", "match": {"location": "features/steps/Todos_API_Testing_Steps.py:585", "arguments": []}, "result": {"status": "passed", "duration": 0.04097414016723633}}, {"keyword": "When", "step_type": "when", "name": "I send DELETE request to \"api/v1/todos/{todo_id}\"", "location": "features/Todos_API_Testing.feature:66", "match": {"location": "features/steps/Todos_API_Testing_Steps.py:395", "arguments": [{"value": "api/v1/todos/{todo_id}", "name": "endpoint"}]}, "result": {"status": "passed", "duration": 0.04197835922241211}}, {"keyword": "Then", "step_type": "then", "name": "the response status code should be 200", "location": "features/Todos_API_Testing.feature:67", "match": {"location": "features/steps/Todos_API_Testing_Steps.py:66", "arguments": [{"value": 200, "name": "status_code", "original": "200"}]}, "result": {"status": "passed", "duration": 0.0019445419311523438}}, {"keyword": "When", "step_type": "when", "name": "I send GET request to \"api/v1/todos/{todo_id}\"", "location": "features/Todos_API_Testing.feature:68", "match": {"location": "features/steps/Todos_API_Testing_Steps.py:29", "arguments": [{"value": "api/v1/todos/{todo_id}", "name": "endpoint"}]}, "result": {"status": "passed", "duration": 0.04565787315368652}}, {"keyword": "Then", "step_type": "then", "name": "the response status code should be 404", "location": "features/Todos_API_Testing.feature:69", "match": {"location": "features/steps/Todos_API_Testing_Steps.py:66", "arguments": [{"value": 404, "name": "status_code", "original": "404"}]}, "result": {"status": "passed", "duration": 0.0010497570037841797}}], "status": "passed"}, {"type": "scenario", "keyword": "Scenario", "name": "Filter todos by query parameters", "tags": ["regression", "todos_filtering", "freeapi"], "location": "features/Todos_API_Testing.feature:72", "steps": [{"keyword": "Given", "step_type": "given", "name": "the API client is configured for the Todos API in the testing environment", "location": "features/Todos_API_Testing.feature:8", "match": {"location": "features/steps/Todos_API_Testing_Steps.py:13", "arguments": []}, "result": {"status": "passed", "duration": 0.0005574226379394531}}, {"keyword": "When", "step_type": "when", "name": "I send GET request to \"api/v1/todos?complete=false\"", "location": "features/Todos_API_Testing.feature:73", "match": {"location": "features/steps/Todos_API_Testing_Steps.py:29", "arguments": [{"value": "api/v1/todos?complete=false", "name": "endpoint"}]}, "result": {"status": "passed", "duration": 0.032827138900756836}}, {"keyword": "Then", "step_type": "then", "name": "the response status code should be 200", "location": "features/Todos_API_Testing.feature:74", "match": {"location": "features/steps/Todos_API_Testing_Steps.py:66", "arguments": [{"value": 200, "name": "status_code", "original": "200"}]}, "result": {"status": "passed", "duration": 0.0008475780487060547}}, {"keyword": "And", "step_type": "then", "name": "the response should contain todos data structure", "location": "features/Todos_API_Testing.feature:75", "match": {"location": "features/steps/Todos_API_Testing_Steps.py:106", "arguments": []}, "result": {"status": "passed", "duration": 0.004327297210693359}}, {"keyword": "And", "step_type": "then", "name": "all returned todos should have \"isComplete\" as false", "location": "features/Todos_API_Testing.feature:76", "match": {"location": "features/steps/Todos_API_Testing_Steps.py:806", "arguments": []}, "result": {"status": "passed", "duration": 0.004590034484863281}}], "status": "passed"}, {"type": "scenario", "keyword": "Scenario", "name": "Search todos by query string", "tags": ["regression", "todos_search", "freeapi"], "location": "features/Todos_API_Testing.feature:79", "steps": [{"keyword": "Given", "step_type": "given", "name": "the API client is configured for the Todos API in the testing environment", "location": "features/Todos_API_Testing.feature:8", "match": {"location": "features/steps/Todos_API_Testing_Steps.py:13", "arguments": []}, "result": {"status": "passed", "duration": 0.0007045269012451172}}, {"keyword": "Given", "step_type": "given", "name": "I have created a todo with title \"Searchable Todo\"", "location": "features/Todos_API_Testing.feature:80", "match": {"location": "features/steps/Todos_API_Testing_Steps.py:828", "arguments": [{"value": "Searchable Todo", "name": "title"}]}, "result": {"status": "passed", "duration": 0.02854776382446289}}, {"keyword": "When", "step_type": "when", "name": "I send GET request to \"api/v1/todos?query=Searchable\"", "location": "features/Todos_API_Testing.feature:81", "match": {"location": "features/steps/Todos_API_Testing_Steps.py:29", "arguments": [{"value": "api/v1/todos?query=Searchable", "name": "endpoint"}]}, "result": {"status": "passed", "duration": 0.029306650161743164}}, {"keyword": "Then", "step_type": "then", "name": "the response status code should be 200", "location": "features/Todos_API_Testing.feature:82", "match": {"location": "features/steps/Todos_API_Testing_Steps.py:66", "arguments": [{"value": 200, "name": "status_code", "original": "200"}]}, "result": {"status": "passed", "duration": 0.0007457733154296875}}, {"keyword": "And", "step_type": "then", "name": "the response should contain todos matching the search query", "location": "features/Todos_API_Testing.feature:83", "match": {"location": "features/steps/Todos_API_Testing_Steps.py:858", "arguments": []}, "result": {"status": "passed", "duration": 0.0047779083251953125}}], "status": "passed"}, {"type": "scenario", "keyword": "Scenario", "name": "Create todo with invalid data", "tags": ["negative", "invalid_todo_creation", "freeapi"], "location": "features/Todos_API_Testing.feature:86", "steps": [{"keyword": "Given", "step_type": "given", "name": "the API client is configured for the Todos API in the testing environment", "location": "features/Todos_API_Testing.feature:8", "match": {"location": "features/steps/Todos_API_Testing_Steps.py:13", "arguments": []}, "result": {"status": "passed", "duration": 0.0005085468292236328}}, {"keyword": "When", "step_type": "when", "name": "I send POST request to \"api/v1/todos/\" with invalid todo data", "location": "features/Todos_API_Testing.feature:87", "table": {"headings": ["field", "value"], "rows": [["title", ""], ["description", ""]]}, "match": {"location": "features/steps/Todos_API_Testing_Steps.py:880", "arguments": []}, "result": {"status": "passed", "duration": 0.04948019981384277}}, {"keyword": "Then", "step_type": "then", "name": "the response status code should be 422", "location": "features/Todos_API_Testing.feature:91", "match": {"location": "features/steps/Todos_API_Testing_Steps.py:66", "arguments": [{"value": 422, "name": "status_code", "original": "422"}]}, "result": {"status": "passed", "duration": 0.0010976791381835938}}, {"keyword": "And", "step_type": "then", "name": "the response should contain validation errors", "location": "features/Todos_API_Testing.feature:92", "match": {"location": "features/steps/Todos_API_Testing_Steps.py:920", "arguments": []}, "result": {"status": "passed", "duration": 0.0050983428955078125}}], "status": "passed"}, {"type": "scenario", "keyword": "Scenario", "name": "Get todo with invalid ID", "tags": ["negative", "invalid_todo_id", "freeapi"], "location": "features/Todos_API_Testing.feature:95", "steps": [{"keyword": "Given", "step_type": "given", "name": "the API client is configured for the Todos API in the testing environment", "location": "features/Todos_API_Testing.feature:8", "match": {"location": "features/steps/Todos_API_Testing_Steps.py:13", "arguments": []}, "result": {"status": "passed", "duration": 0.0009961128234863281}}, {"keyword": "When", "step_type": "when", "name": "I send GET request to \"api/v1/todos/invalid_id_123\"", "location": "features/Todos_API_Testing.feature:96", "match": {"location": "features/steps/Todos_API_Testing_Steps.py:29", "arguments": [{"value": "api/v1/todos/invalid_id_123", "name": "endpoint"}]}, "result": {"status": "passed", "duration": 0.029604196548461914}}, {"keyword": "Then", "step_type": "then", "name": "the response status code should be 422", "location": "features/Todos_API_Testing.feature:97", "match": {"location": "features/steps/Todos_API_Testing_Steps.py:66", "arguments": [{"value": 422, "name": "status_code", "original": "422"}]}, "result": {"status": "passed", "duration": 0.0014030933380126953}}, {"keyword": "And", "step_type": "then", "name": "the response should contain validation errors", "location": "features/Todos_API_Testing.feature:98", "match": {"location": "features/steps/Todos_API_Testing_Steps.py:920", "arguments": []}, "result": {"status": "passed", "duration": 0.005767822265625}}], "status": "passed"}, {"type": "scenario", "keyword": "Scenario", "name": "Update non-existent todo", "tags": ["negative", "update_nonexistent_todo", "freeapi"], "location": "features/Todos_API_Testing.feature:101", "steps": [{"keyword": "Given", "step_type": "given", "name": "the API client is configured for the Todos API in the testing environment", "location": "features/Todos_API_Testing.feature:8", "match": {"location": "features/steps/Todos_API_Testing_Steps.py:13", "arguments": []}, "result": {"status": "passed", "duration": 0.0004754066467285156}}, {"keyword": "When", "step_type": "when", "name": "I send PATCH request to \"api/v1/todos/nonexistent123\" with updated data", "location": "features/Todos_API_Testing.feature:102", "table": {"headings": ["field", "value"], "rows": [["title", "Updated Todo"]]}, "match": {"location": "features/steps/Todos_API_Testing_Steps.py:352", "arguments": [{"value": "api/v1/todos/nonexistent123", "name": "endpoint"}]}, "result": {"status": "passed", "duration": 0.0471348762512207}}, {"keyword": "Then", "step_type": "then", "name": "the response status code should be 422", "location": "features/Todos_API_Testing.feature:105", "match": {"location": "features/steps/Todos_API_Testing_Steps.py:66", "arguments": [{"value": 422, "name": "status_code", "original": "422"}]}, "result": {"status": "passed", "duration": 0.0013554096221923828}}, {"keyword": "And", "step_type": "then", "name": "the response should contain validation errors", "location": "features/Todos_API_Testing.feature:106", "match": {"location": "features/steps/Todos_API_Testing_Steps.py:920", "arguments": []}, "result": {"status": "passed", "duration": 0.005999565124511719}}], "status": "passed"}, {"type": "scenario", "keyword": "Scenario", "name": "Delete non-existent todo", "tags": ["negative", "delete_nonexistent_todo", "freeapi"], "location": "features/Todos_API_Testing.feature:109", "steps": [{"keyword": "Given", "step_type": "given", "name": "the API client is configured for the Todos API in the testing environment", "location": "features/Todos_API_Testing.feature:8", "match": {"location": "features/steps/Todos_API_Testing_Steps.py:13", "arguments": []}, "result": {"status": "passed", "duration": 0.0006282329559326172}}, {"keyword": "When", "step_type": "when", "name": "I send DELETE request to \"api/v1/todos/nonexistent123\"", "location": "features/Todos_API_Testing.feature:110", "match": {"location": "features/steps/Todos_API_Testing_Steps.py:395", "arguments": [{"value": "api/v1/todos/nonexistent123", "name": "endpoint"}]}, "result": {"status": "passed", "duration": 0.028702735900878906}}, {"keyword": "Then", "step_type": "then", "name": "the response status code should be 422", "location": "features/Todos_API_Testing.feature:111", "match": {"location": "features/steps/Todos_API_Testing_Steps.py:66", "arguments": [{"value": 422, "name": "status_code", "original": "422"}]}, "result": {"status": "passed", "duration": 0.0009949207305908203}}], "status": "passed"}, {"type": "scenario", "keyword": "Scenario", "name": "Validate FreeAPI todos response times", "tags": ["performance", "todo_response_time", "freeapi"], "location": "features/Todos_API_Testing.feature:114", "steps": [{"keyword": "Given", "step_type": "given", "name": "the API client is configured for the Todos API in the testing environment", "location": "features/Todos_API_Testing.feature:8", "match": {"location": "features/steps/Todos_API_Testing_Steps.py:13", "arguments": []}, "result": {"status": "passed", "duration": 0.0004856586456298828}}, {"keyword": "When", "step_type": "when", "name": "I send GET request to \"api/v1/todos\"", "location": "features/Todos_API_Testing.feature:115", "match": {"location": "features/steps/Todos_API_Testing_Steps.py:29", "arguments": [{"value": "api/v1/todos", "name": "endpoint"}]}, "result": {"status": "passed", "duration": 0.029646873474121094}}, {"keyword": "Then", "step_type": "then", "name": "the response time should be less than 2 seconds", "location": "features/Todos_API_Testing.feature:116", "match": {"location": "features/steps/Todos_API_Testing_Steps.py:945", "arguments": [{"value": 2, "name": "max_seconds", "original": "2"}]}, "result": {"status": "passed", "duration": 0.0014712810516357422}}, {"keyword": "When", "step_type": "when", "name": "I send POST request to \"api/v1/todos/\" with valid todo data", "location": "features/Todos_API_Testing.feature:117", "table": {"headings": ["field", "value"], "rows": [["title", "Performance Test Todo"], ["description", "Testing response time"]]}, "match": {"location": "features/steps/Todos_API_Testing_Steps.py:963", "arguments": []}, "result": {"status": "passed", "duration": 0.030619382858276367}}, {"keyword": "Then", "step_type": "then", "name": "the response time should be less than 3 seconds", "location": "features/Todos_API_Testing.feature:121", "match": {"location": "features/steps/Todos_API_Testing_Steps.py:945", "arguments": [{"value": 3, "name": "max_seconds", "original": "3"}]}, "result": {"status": "passed", "duration": 0.001194000244140625}}], "status": "passed"}, {"type": "scenario", "keyword": "Scenario", "name": "Validate todo response data types and structure", "tags": ["data_validation", "todo_fields", "freeapi"], "location": "features/Todos_API_Testing.feature:124", "steps": [{"keyword": "Given", "step_type": "given", "name": "the API client is configured for the Todos API in the testing environment", "location": "features/Todos_API_Testing.feature:8", "match": {"location": "features/steps/Todos_API_Testing_Steps.py:13", "arguments": []}, "result": {"status": "passed", "duration": 0.0005595684051513672}}, {"keyword": "Given", "step_type": "given", "name": "I have created a todo via FreeAPI", "location": "features/Todos_API_Testing.feature:125", "match": {"location": "features/steps/Todos_API_Testing_Steps.py:585", "arguments": []}, "result": {"status": "passed", "duration": 0.03229236602783203}}, {"keyword": "When", "step_type": "when", "name": "I send GET request to \"api/v1/todos/{todo_id}\"", "location": "features/Todos_API_Testing.feature:126", "match": {"location": "features/steps/Todos_API_Testing_Steps.py:29", "arguments": [{"value": "api/v1/todos/{todo_id}", "name": "endpoint"}]}, "result": {"status": "passed", "duration": 0.02857041358947754}}, {"keyword": "Then", "step_type": "then", "name": "the response status code should be 200", "location": "features/Todos_API_Testing.feature:127", "match": {"location": "features/steps/Todos_API_Testing_Steps.py:66", "arguments": [{"value": 200, "name": "status_code", "original": "200"}]}, "result": {"status": "passed", "duration": 0.0009114742279052734}}, {"keyword": "And", "step_type": "then", "name": "the field \"_id\" should be of type \"string\"", "location": "features/Todos_API_Testing.feature:128", "match": {"location": "features/steps/Todos_API_Testing_Steps.py:1003", "arguments": [{"value": "_id", "name": "field_name"}, {"value": "string", "name": "expected_type"}]}, "result": {"status": "passed", "duration": 0.004102230072021484}}, {"keyword": "And", "step_type": "then", "name": "the field \"title\" should be of type \"string\"", "location": "features/Todos_API_Testing.feature:129", "match": {"location": "features/steps/Todos_API_Testing_Steps.py:1003", "arguments": [{"value": "title", "name": "field_name"}, {"value": "string", "name": "expected_type"}]}, "result": {"status": "passed", "duration": 0.004505157470703125}}, {"keyword": "And", "step_type": "then", "name": "the field \"description\" should be of type \"string\"", "location": "features/Todos_API_Testing.feature:130", "match": {"location": "features/steps/Todos_API_Testing_Steps.py:1003", "arguments": [{"value": "description", "name": "field_name"}, {"value": "string", "name": "expected_type"}]}, "result": {"status": "passed", "duration": 0.006463527679443359}}, {"keyword": "And", "step_type": "then", "name": "the field \"isComplete\" should be of type \"boolean\"", "location": "features/Todos_API_Testing.feature:131", "match": {"location": "features/steps/Todos_API_Testing_Steps.py:1003", "arguments": [{"value": "isComplete", "name": "field_name"}, {"value": "boolean", "name": "expected_type"}]}, "result": {"status": "passed", "duration": 0.004998445510864258}}, {"keyword": "And", "step_type": "then", "name": "the field \"createdAt\" should be a valid ISO date format", "location": "features/Todos_API_Testing.feature:132", "match": {"location": "features/steps/Todos_API_Testing_Steps.py:430", "arguments": [{"value": "createdAt", "name": "field"}]}, "result": {"status": "passed", "duration": 0.005439281463623047}}, {"keyword": "And", "step_type": "then", "name": "the field \"updatedAt\" should be a valid ISO date format", "location": "features/Todos_API_Testing.feature:133", "match": {"location": "features/steps/Todos_API_Testing_Steps.py:430", "arguments": [{"value": "updatedAt", "name": "field"}]}, "result": {"status": "passed", "duration": 0.005128145217895508}}], "status": "passed"}]},

{"keyword": "Feature", "name": "Comprehensive API Testing As a QA engineer I want to test REST APIs thoroughly So that I can ensure API functionality and data integrity", "tags": ["api"], "location": "features/Typicode_API_Testing.feature:2", "status": "failed", "elements": [{"type": "background", "keyword": "Background", "name": "", "location": "features/Typicode_API_Testing.feature:4", "steps": [{"keyword": "Given", "step_type": "given", "name": "the API client is configured for testing environment", "location": "features/Typicode_API_Testing.feature:5"}]}, {"type": "scenario", "keyword": "Scenario", "name": "Get all users from API", "tags": ["smoke", "users"], "location": "features/Typicode_API_Testing.feature:8", "steps": [{"keyword": "Given", "step_type": "given", "name": "the API client is configured for testing environment", "location": "features/Typicode_API_Testing.feature:5", "match": {"location": "features/steps/Typicode_API_Testing_Steps.py:13", "arguments": []}, "result": {"status": "passed", "duration": 0.0004048347473144531}}, {"keyword": "When", "step_type": "when", "name": "user send GET request to \"/users\"", "location": "features/Typicode_API_Testing.feature:9", "match": {"location": "features/steps/Typicode_API_Testing_Steps.py:29", "arguments": [{"value": "/users", "name": "endpoint"}]}, "result": {"status": "passed", "duration": 0.5806152820587158}}, {"keyword": "Then", "step_type": "then", "name": "response status code should be 200", "location": "features/Typicode_API_Testing.feature:10", "match": {"location": "features/steps/Typicode_API_Testing_Steps.py:48", "arguments": [{"value": 200, "name": "status_code", "original": "200"}]}, "result": {"status": "passed", "duration": 0.0010380744934082031}}, {"keyword": "And", "step_type": "then", "name": "the response should contain a list of users", "location": "features/Typicode_API_Testing.feature:11", "match": {"location": "features/steps/Typicode_API_Testing_Steps.py:63", "arguments": []}, "result": {"status": "passed", "duration": 0.0037124156951904297}}, {"keyword": "And", "step_type": "then", "name": "each user should have required fields \"id\", \"name\", \"email\"", "location": "features/Typicode_API_Testing.feature:12", "match": {"location": "features/steps/Typicode_API_Testing_Steps.py:80", "arguments": [{"value": "id\", \"name\", \"email", "name": "field_list"}]}, "result": {"status": "passed", "duration": 0.005998373031616211}}, {"keyword": "And", "step_type": "then", "name": "response time should be less than 300 ms", "location": "features/Typicode_API_Testing.feature:13", "match": {"location": "features/steps/Typicode_API_Testing_Steps.py:107", "arguments": [{"value": 300, "name": "max_time", "original": "300"}]}, "result": {"status": "failed", "duration": 0.0008761882781982422, "error_message": "ASSERT FAILED: Response time 579.7ms exceeds 300ms limit"}}], "status": "failed"}, {"type": "scenario", "keyword": "Scenario", "name": "Create a new user via API", "tags": ["smoke", "user_creation"], "location": "features/Typicode_API_Testing.feature:16", "steps": [{"keyword": "Given", "step_type": "given", "name": "the API client is configured for testing environment", "location": "features/Typicode_API_Testing.feature:5", "match": {"location": "features/steps/Typicode_API_Testing_Steps.py:13", "arguments": []}, "result": {"status": "passed", "duration": 0.0004241466522216797}}, {"keyword": "Given", "step_type": "given", "name": "I have valid user data", "location": "features/Typicode_API_Testing.feature:17", "table": {"headings": ["field", "value"], "rows": [["name", "{{random_name}}"], ["email", "{{random_email}}"], ["username", "{{random_username}}"], ["phone", "{{random_phone}}"], ["website", "https://example.com"]]}, "match": {"location": "features/steps/Typicode_API_Testing_Steps.py:119", "arguments": []}, "result": {"status": "passed", "duration": 0.7160506248474121}}, {"keyword": "When", "step_type": "when", "name": "I send POST request to \"/users\" with the user data", "location": "features/Typicode_API_Testing.feature:24", "match": {"location": "features/steps/Typicode_API_Testing_Steps.py:144", "arguments": [{"value": "/users", "name": "endpoint"}]}, "result": {"status": "passed", "duration": 0.3847522735595703}}, {"keyword": "Then", "step_type": "then", "name": "response status code should be 201", "location": "features/Typicode_API_Testing.feature:25", "match": {"location": "features/steps/Typicode_API_Testing_Steps.py:48", "arguments": [{"value": 201, "name": "status_code", "original": "201"}]}, "result": {"status": "passed", "duration": 0.0014019012451171875}}, {"keyword": "And", "step_type": "then", "name": "the response should contain the created user details", "location": "features/Typicode_API_Testing.feature:26", "match": {"location": "features/steps/Typicode_API_Testing_Steps.py:163", "arguments": []}, "result": {"status": "passed", "duration": 0.004805564880371094}}, {"keyword": "And", "step_type": "then", "name": "the user should have a generated \"id\"", "location": "features/Typicode_API_Testing.feature:27", "match": {"location": "features/steps/Typicode_API_Testing_Steps.py:173", "arguments": [{"value": "id", "name": "field"}]}, "result": {"status": "passed", "duration": 0.006159067153930664}}, {"keyword": "And", "step_type": "then", "name": "the user \"name\" should match the input data", "location": "features/Typicode_API_Testing.feature:28", "match": {"location": "features/steps/Typicode_API_Testing_Steps.py:181", "arguments": [{"value": "name", "name": "field"}]}, "result": {"status": "passed", "duration": 0.0049593448638916016}}, {"keyword": "And", "step_type": "then", "name": "the user \"email\" should match the input data", "location": "features/Typicode_API_Testing.feature:29", "match": {"location": "features/steps/Typicode_API_Testing_Steps.py:181", "arguments": [{"value": "email", "name": "field"}]}, "result": {"status": "passed", "duration": 0.005214214324951172}}], "status": "passed"}, {"type": "scenario", "keyword": "Scenario", "name": "Retrieve specific user by ID", "tags": ["api", "regression", "user_retrieval"], "location": "features/Typicode_API_Testing.feature:32", "steps": [{"keyword": "Given", "step_type": "given", "name": "the API client is configured for testing environment", "location": "features/Typicode_API_Testing.feature:5", "match": {"location": "features/steps/Typicode_API_Testing_Steps.py:13", "arguments": []}, "result": {"status": "passed", "duration": 0.0006177425384521484}}, {"keyword": "Given", "step_type": "given", "name": "I have created a user via API", "location": "features/Typicode_API_Testing.feature:33", "match": {"location": "features/steps/Typicode_API_Testing_Steps.py:192", "arguments": []}, "result": {"status": "passed", "duration": 0.3878035545349121}}, {"keyword": "When", "step_type": "when", "name": "user send GET request to \"/users/{user_id}\"", "location": "features/Typicode_API_Testing.feature:34", "match": {"location": "features/steps/Typicode_API_Testing_Steps.py:29", "arguments": [{"value": "/users/{user_id}", "name": "endpoint"}]}, "result": {"status": "passed", "duration": 0.1855473518371582}}, {"keyword": "Then", "step_type": "then", "name": "the response status code should be 200", "location": "features/Typicode_API_Testing.feature:35", "match": {"location": "features/steps/Todos_API_Testing_Steps.py:66", "arguments": [{"value": 200, "name": "status_code", "original": "200"}]}, "result": {"status": "passed", "duration": 0.001631021499633789}}, {"keyword": "And", "step_type": "then", "name": "the response should contain user details", "location": "features/Typicode_API_Testing.feature:36", "match": {"location": "features/steps/Typicode_API_Testing_Steps.py:215", "arguments": []}, "result": {"status": "passed", "duration": 0.0053157806396484375}}, {"keyword": "And", "step_type": "then", "name": "the user \"id\" should match the requested ID", "location": "features/Typicode_API_Testing.feature:37", "match": {"location": "features/steps/Typicode_API_Testing_Steps.py:225", "arguments": [{"value": "id", "name": "field"}]}, "result": {"status": "passed", "duration": 0.004308938980102539}}, {"keyword": "And", "step_type": "then", "name": "the user should have all required fields populated", "location": "features/Typicode_API_Testing.feature:38", "match": {"location": "features/steps/Typicode_API_Testing_Steps.py:233", "arguments": []}, "result": {"status": "passed", "duration": 0.0053904056549072266}}], "status": "passed"}, {"type": "scenario", "keyword": "Scenario", "name": "Update user information", "tags": ["api", "regression", "user_update"], "location": "features/Typicode_API_Testing.feature:41", "steps": [{"keyword": "Given", "step_type": "given", "name": "the API client is configured for testing environment", "location": "features/Typicode_API_Testing.feature:5", "match": {"location": "features/steps/Typicode_API_Testing_Steps.py:13", "arguments": []}, "result": {"status": "passed", "duration": 0.0005326271057128906}}, {"keyword": "Given", "step_type": "given", "name": "I have created a user via API", "location": "features/Typicode_API_Testing.feature:42", "match": {"location": "features/steps/Typicode_API_Testing_Steps.py:192", "arguments": []}, "result": {"status": "passed", "duration": 0.4240856170654297}}, {"keyword": "When", "step_type": "when", "name": "I send PUT request to \"/users/{user_id}\" with updated data", "location": "features/Typicode_API_Testing.feature:43", "table": {"headings": ["field", "value"], "rows": [["name", "Updated User Name"], ["email", "updated@example.com"]]}, "match": {"location": "features/steps/Typicode_API_Testing_Steps.py:244", "arguments": [{"value": "/users/{user_id}", "name": "endpoint"}]}, "result": {"status": "passed", "duration": 0.8619539737701416}}, {"keyword": "Then", "step_type": "then", "name": "the response status code should be 200", "location": "features/Typicode_API_Testing.feature:47", "match": {"location": "features/steps/Todos_API_Testing_Steps.py:66", "arguments": [{"value": 200, "name": "status_code", "original": "200"}]}, "result": {"status": "passed", "duration": 0.0006699562072753906}}, {"keyword": "And", "step_type": "then", "name": "the response should contain updated user details", "location": "features/Typicode_API_Testing.feature:48", "match": {"location": "features/steps/Typicode_API_Testing_Steps.py:264", "arguments": []}, "result": {"status": "passed", "duration": 0.0035200119018554688}}, {"keyword": "And", "step_type": "then", "name": "the user \"name\" should be \"Updated User Name\"", "location": "features/Typicode_API_Testing.feature:49", "match": {"location": "features/steps/Typicode_API_Testing_Steps.py:275", "arguments": [{"value": "name", "name": "field"}, {"value": "Updated User Name", "name": "expected_value"}]}, "result": {"status": "passed", "duration": 0.003355741500854492}}, {"keyword": "And", "step_type": "then", "name": "the user \"email\" should be \"updated@example.com\"", "location": "features/Typicode_API_Testing.feature:50", "match": {"location": "features/steps/Typicode_API_Testing_Steps.py:275", "arguments": [{"value": "email", "name": "field"}, {"value": "updated@example.com", "name": "expected_value"}]}, "result": {"status": "passed", "duration": 0.003753185272216797}}], "status": "passed"}, {"type": "scenario", "keyword": "Scenario", "name": "Delete user", "tags": ["api", "regression", "user_deletion"], "location": "features/Typicode_API_Testing.feature:53", "steps": [{"keyword": "Given", "step_type": "given", "name": "the API client is configured for testing environment", "location": "features/Typicode_API_Testing.feature:5", "match": {"location": "features/steps/Typicode_API_Testing_Steps.py:13", "arguments": []}, "result": {"status": "passed", "duration": 0.00044918060302734375}}, {"keyword": "Given", "step_type": "given", "name": "I have created a user via API", "location": "features/Typicode_API_Testing.feature:54", "match": {"location": "features/steps/Typicode_API_Testing_Steps.py:192", "arguments": []}, "result": {"status": "passed", "duration": 0.40610647201538086}}, {"keyword": "When", "step_type": "when", "name": "user send DELETE request to \"/users/{user_id}\"", "location": "features/Typicode_API_Testing.feature:55", "match": {"location": "features/steps/Typicode_API_Testing_Steps.py:284", "arguments": [{"value": "/users/{user_id}", "name": "endpoint"}]}, "result": {"status": "passed", "duration": 0.3700523376464844}}, {"keyword": "Then", "step_type": "then", "name": "the response status code should be 200", "location": "features/Typicode_API_Testing.feature:56", "match": {"location": "features/steps/Todos_API_Testing_Steps.py:66", "arguments": [{"value": 200, "name": "status_code", "original": "200"}]}, "result": {"status": "passed", "duration": 0.0008940696716308594}}, {"keyword": "When", "step_type": "when", "name": "user send GET request to \"/users/{user_id}\"", "location": "features/Typicode_API_Testing.feature:57", "match": {"location": "features/steps/Typicode_API_Testing_Steps.py:29", "arguments": [{"value": "/users/{user_id}", "name": "endpoint"}]}, "result": {"status": "passed", "duration": 0.15855813026428223}}, {"keyword": "Then", "step_type": "then", "name": "the response status code should be 404", "location": "features/Typicode_API_Testing.feature:58", "match": {"location": "features/steps/Todos_API_Testing_Steps.py:66", "arguments": [{"value": 404, "name": "status_code", "original": "404"}]}, "result": {"status": "failed", "duration": 0.005515098571777344, "error_message": "ASSERT FAILED: Expected status 404, but got 200"}}], "status": "failed"}, {"type": "scenario", "keyword": "Scenario", "name": "Get all posts from API", "tags": ["api", "smoke", "posts"], "location": "features/Typicode_API_Testing.feature:61", "steps": [{"keyword": "Given", "step_type": "given", "name": "the API client is configured for testing environment", "location": "features/Typicode_API_Testing.feature:5", "match": {"location": "features/steps/Typicode_API_Testing_Steps.py:13", "arguments": []}, "result": {"status": "passed", "duration": 0.0004181861877441406}}, {"keyword": "When", "step_type": "when", "name": "user send GET request to \"/posts\"", "location": "features/Typicode_API_Testing.feature:62", "match": {"location": "features/steps/Typicode_API_Testing_Steps.py:29", "arguments": [{"value": "/posts", "name": "endpoint"}]}, "result": {"status": "passed", "duration": 0.14299821853637695}}, {"keyword": "Then", "step_type": "then", "name": "the response status code should be 200", "location": "features/Typicode_API_Testing.feature:63", "match": {"location": "features/steps/Todos_API_Testing_Steps.py:66", "arguments": [{"value": 200, "name": "status_code", "original": "200"}]}, "result": {"status": "passed", "duration": 0.0010361671447753906}}, {"keyword": "And", "step_type": "then", "name": "the response should contain a list of posts", "location": "features/Typicode_API_Testing.feature:64", "match": {"location": "features/steps/Typicode_API_Testing_Steps.py:297", "arguments": []}, "result": {"status": "passed", "duration": 0.006260871887207031}}, {"keyword": "And", "step_type": "then", "name": "each post should have required fields \"id\", \"title\", \"body\", \"userId\"", "location": "features/Typicode_API_Testing.feature:65", "match": {"location": "features/steps/Typicode_API_Testing_Steps.py:305", "arguments": [{"value": "id\", \"title\", \"body\", \"userId", "name": "field_list"}]}, "result": {"status": "passed", "duration": 0.006966114044189453}}, {"keyword": "And", "step_type": "then", "name": "the response should contain at least 10 posts", "location": "features/Typicode_API_Testing.feature:66", "match": {"location": "features/steps/Typicode_API_Testing_Steps.py:315", "arguments": [{"value": 10, "name": "min_count", "original": "10"}]}, "result": {"status": "passed", "duration": 0.008284330368041992}}], "status": "passed"}, {"type": "scenario", "keyword": "Scenario", "name": "Create a new post", "tags": ["api", "regression", "post_creation"], "location": "features/Typicode_API_Testing.feature:69", "steps": [{"keyword": "Given", "step_type": "given", "name": "the API client is configured for testing environment", "location": "features/Typicode_API_Testing.feature:5", "match": {"location": "features/steps/Typicode_API_Testing_Steps.py:13", "arguments": []}, "result": {"status": "passed", "duration": 0.0007843971252441406}}, {"keyword": "Given", "step_type": "given", "name": "I have a valid user ID", "location": "features/Typicode_API_Testing.feature:70", "match": {"location": "features/steps/Typicode_API_Testing_Steps.py:323", "arguments": []}, "result": {"status": "passed", "duration": 0.0008606910705566406}}, {"keyword": "When", "step_type": "when", "name": "I send POST request to \"/posts\" with post data", "location": "features/Typicode_API_Testing.feature:71", "table": {"headings": ["field", "value"], "rows": [["title", "Test Post for API Automation"], ["body", "This is a test post created via API"], ["userId", "{user_id}"]]}, "match": {"location": "features/steps/Typicode_API_Testing_Steps.py:330", "arguments": [{"value": "/posts", "name": "endpoint"}]}, "result": {"status": "passed", "duration": 0.3696305751800537}}, {"keyword": "Then", "step_type": "then", "name": "the response status code should be 201", "location": "features/Typicode_API_Testing.feature:76", "match": {"location": "features/steps/Todos_API_Testing_Steps.py:66", "arguments": [{"value": 201, "name": "status_code", "original": "201"}]}, "result": {"status": "passed", "duration": 0.0008702278137207031}}, {"keyword": "And", "step_type": "then", "name": "the response should contain the created post", "location": "features/Typicode_API_Testing.feature:77", "match": {"location": "features/steps/Typicode_API_Testing_Steps.py:358", "arguments": []}, "result": {"status": "passed", "duration": 0.005895376205444336}}, {"keyword": "And", "step_type": "then", "name": "the post \"title\" should be \"Test Post for API Automation\"", "location": "features/Typicode_API_Testing.feature:78", "match": {"location": "features/steps/Typicode_API_Testing_Steps.py:368", "arguments": [{"value": "title", "name": "field"}, {"value": "Test Post for API Automation", "name": "expected_value"}]}, "result": {"status": "passed", "duration": 0.004731893539428711}}, {"keyword": "And", "step_type": "then", "name": "the post \"userId\" should match the provided user ID", "location": "features/Typicode_API_Testing.feature:79", "match": {"location": "features/steps/Typicode_API_Testing_Steps.py:377", "arguments": [{"value": "userId", "name": "field"}]}, "result": {"status": "passed", "duration": 0.005816459655761719}}], "status": "passed"}, {"type": "scenario", "keyword": "Scenario", "name": "Get posts by specific user", "tags": ["api", "regression", "posts_by_user"], "location": "features/Typicode_API_Testing.feature:82", "steps": [{"keyword": "Given", "step_type": "given", "name": "the API client is configured for testing environment", "location": "features/Typicode_API_Testing.feature:5", "match": {"location": "features/steps/Typicode_API_Testing_Steps.py:13", "arguments": []}, "result": {"status": "passed", "duration": 0.0009365081787109375}}, {"keyword": "Given", "step_type": "given", "name": "I have a valid user ID", "location": "features/Typicode_API_Testing.feature:83", "match": {"location": "features/steps/Typicode_API_Testing_Steps.py:323", "arguments": []}, "result": {"status": "passed", "duration": 0.000530242919921875}}, {"keyword": "When", "step_type": "when", "name": "user send GET request to \"/posts?userId={user_id}\"", "location": "features/Typicode_API_Testing.feature:84", "match": {"location": "features/steps/Typicode_API_Testing_Steps.py:29", "arguments": [{"value": "/posts?userId={user_id}", "name": "endpoint"}]}, "result": {"status": "passed", "duration": 0.14995837211608887}}, {"keyword": "Then", "step_type": "then", "name": "the response status code should be 200", "location": "features/Typicode_API_Testing.feature:85", "match": {"location": "features/steps/Todos_API_Testing_Steps.py:66", "arguments": [{"value": 200, "name": "status_code", "original": "200"}]}, "result": {"status": "passed", "duration": 0.0006895065307617188}}, {"keyword": "And", "step_type": "then", "name": "the response should contain posts for the user", "location": "features/Typicode_API_Testing.feature:86", "match": {"location": "features/steps/Typicode_API_Testing_Steps.py:386", "arguments": []}, "result": {"status": "passed", "duration": 0.0038993358612060547}}, {"keyword": "And", "step_type": "then", "name": "all posts should have \"userId\" matching the requested user", "location": "features/Typicode_API_Testing.feature:87", "match": {"location": "features/steps/Typicode_API_Testing_Steps.py:394", "arguments": [{"value": "userId", "name": "field"}]}, "result": {"status": "passed", "duration": 0.003978252410888672}}], "status": "passed"}, {"type": "scenario", "keyword": "Scenario", "name": "Get comments for a post", "tags": ["api", "smoke", "comments"], "location": "features/Typicode_API_Testing.feature:90", "steps": [{"keyword": "Given", "step_type": "given", "name": "the API client is configured for testing environment", "location": "features/Typicode_API_Testing.feature:5", "match": {"location": "features/steps/Typicode_API_Testing_Steps.py:13", "arguments": []}, "result": {"status": "passed", "duration": 0.00042939186096191406}}, {"keyword": "Given", "step_type": "given", "name": "I have a valid post ID", "location": "features/Typicode_API_Testing.feature:91", "match": {"location": "features/steps/Typicode_API_Testing_Steps.py:404", "arguments": []}, "result": {"status": "passed", "duration": 0.00042176246643066406}}, {"keyword": "When", "step_type": "when", "name": "user send GET request to \"/posts/{post_id}/comments\"", "location": "features/Typicode_API_Testing.feature:92", "match": {"location": "features/steps/Typicode_API_Testing_Steps.py:29", "arguments": [{"value": "/posts/{post_id}/comments", "name": "endpoint"}]}, "result": {"status": "passed", "duration": 0.15329742431640625}}, {"keyword": "Then", "step_type": "then", "name": "the response status code should be 200", "location": "features/Typicode_API_Testing.feature:93", "match": {"location": "features/steps/Todos_API_Testing_Steps.py:66", "arguments": [{"value": 200, "name": "status_code", "original": "200"}]}, "result": {"status": "passed", "duration": 0.0007581710815429688}}, {"keyword": "And", "step_type": "then", "name": "the response should contain a list of comments", "location": "features/Typicode_API_Testing.feature:94", "match": {"location": "features/steps/Typicode_API_Testing_Steps.py:411", "arguments": []}, "result": {"status": "passed", "duration": 0.0037679672241210938}}, {"keyword": "And", "step_type": "then", "name": "each comment should have required fields \"id\", \"name\", \"email\", \"body\", \"postId\"", "location": "features/Typicode_API_Testing.feature:95", "match": {"location": "features/steps/Typicode_API_Testing_Steps.py:418", "arguments": [{"value": "id\", \"name\", \"email\", \"body\", \"postId", "name": "field_list"}]}, "result": {"status": "passed", "duration": 0.003572702407836914}}], "status": "passed"}, {"type": "scenario", "keyword": "Scenario", "name": "Add comment to a post", "tags": ["api", "regression", "comment_creation"], "location": "features/Typicode_API_Testing.feature:98", "steps": [{"keyword": "Given", "step_type": "given", "name": "the API client is configured for testing environment", "location": "features/Typicode_API_Testing.feature:5", "match": {"location": "features/steps/Typicode_API_Testing_Steps.py:13", "arguments": []}, "result": {"status": "passed", "duration": 0.0006122589111328125}}, {"keyword": "Given", "step_type": "given", "name": "I have a valid post ID", "location": "features/Typicode_API_Testing.feature:99", "match": {"location": "features/steps/Typicode_API_Testing_Steps.py:404", "arguments": []}, "result": {"status": "passed", "duration": 0.0005877017974853516}}, {"keyword": "When", "step_type": "when", "name": "I send POST request to \"/posts/{post_id}/comments\" with comment data", "location": "features/Typicode_API_Testing.feature:100", "table": {"headings": ["field", "value"], "rows": [["name", "Test Commenter"], ["email", "commenter@example.com"], ["body", "This is a test comment via API"]]}, "match": {"location": "features/steps/Typicode_API_Testing_Steps.py:430", "arguments": [{"value": "/posts/{post_id}/comments", "name": "endpoint"}]}, "result": {"status": "passed", "duration": 0.4272921085357666}}, {"keyword": "Then", "step_type": "then", "name": "the response status code should be 201", "location": "features/Typicode_API_Testing.feature:105", "match": {"location": "features/steps/Todos_API_Testing_Steps.py:66", "arguments": [{"value": 201, "name": "status_code", "original": "201"}]}, "result": {"status": "passed", "duration": 0.0006175041198730469}}, {"keyword": "And", "step_type": "then", "name": "the response should contain the created comment", "location": "features/Typicode_API_Testing.feature:106", "match": {"location": "features/steps/Typicode_API_Testing_Steps.py:450", "arguments": []}, "result": {"status": "passed", "duration": 0.0026781558990478516}}, {"keyword": "And", "step_type": "then", "name": "the comment \"postId\" should match the post ID", "location": "features/Typicode_API_Testing.feature:107", "match": {"location": "features/steps/Typicode_API_Testing_Steps.py:460", "arguments": [{"value": "postId", "name": "field"}]}, "result": {"status": "passed", "duration": 0.004179239273071289}}], "status": "passed"}, {"type": "scenario", "keyword": "Scenario", "name": "Get all albums", "tags": ["api", "smoke", "albums"], "location": "features/Typicode_API_Testing.feature:110", "steps": [{"keyword": "Given", "step_type": "given", "name": "the API client is configured for testing environment", "location": "features/Typicode_API_Testing.feature:5", "match": {"location": "features/steps/Typicode_API_Testing_Steps.py:13", "arguments": []}, "result": {"status": "passed", "duration": 0.00037479400634765625}}, {"keyword": "When", "step_type": "when", "name": "user send GET request to \"/albums\"", "location": "features/Typicode_API_Testing.feature:111", "match": {"location": "features/steps/Typicode_API_Testing_Steps.py:29", "arguments": [{"value": "/albums", "name": "endpoint"}]}, "result": {"status": "passed", "duration": 0.8427956104278564}}, {"keyword": "Then", "step_type": "then", "name": "the response status code should be 200", "location": "features/Typicode_API_Testing.feature:112", "match": {"location": "features/steps/Todos_API_Testing_Steps.py:66", "arguments": [{"value": 200, "name": "status_code", "original": "200"}]}, "result": {"status": "passed", "duration": 0.001476287841796875}}, {"keyword": "And", "step_type": "then", "name": "the response should contain a list of albums", "location": "features/Typicode_API_Testing.feature:113", "match": {"location": "features/steps/Typicode_API_Testing_Steps.py:479", "arguments": []}, "result": {"status": "passed", "duration": 0.006827831268310547}}, {"keyword": "And", "step_type": "then", "name": "each album should have required fields \"id\", \"title\", \"userId\"", "location": "features/Typicode_API_Testing.feature:114", "match": {"location": "features/steps/Typicode_API_Testing_Steps.py:487", "arguments": [{"value": "id\", \"title\", \"userId", "name": "field_list"}]}, "result": {"status": "passed", "duration": 0.005982160568237305}}], "status": "passed"}, {"type": "scenario", "keyword": "Scenario", "name": "Get photos from an album", "tags": ["api", "regression", "photos"], "location": "features/Typicode_API_Testing.feature:117", "steps": [{"keyword": "Given", "step_type": "given", "name": "the API client is configured for testing environment", "location": "features/Typicode_API_Testing.feature:5", "match": {"location": "features/steps/Typicode_API_Testing_Steps.py:13", "arguments": []}, "result": {"status": "passed", "duration": 0.0005824565887451172}}, {"keyword": "Given", "step_type": "given", "name": "I have a valid album ID", "location": "features/Typicode_API_Testing.feature:118", "match": {"location": "features/steps/Typicode_API_Testing_Steps.py:472", "arguments": []}, "result": {"status": "passed", "duration": 0.0005478858947753906}}, {"keyword": "When", "step_type": "when", "name": "user send GET request to \"/albums/{album_id}/photos\"", "location": "features/Typicode_API_Testing.feature:119", "match": {"location": "features/steps/Typicode_API_Testing_Steps.py:29", "arguments": [{"value": "/albums/{album_id}/photos", "name": "endpoint"}]}, "result": {"status": "passed", "duration": 0.20497465133666992}}, {"keyword": "Then", "step_type": "then", "name": "the response status code should be 200", "location": "features/Typicode_API_Testing.feature:120", "match": {"location": "features/steps/Todos_API_Testing_Steps.py:66", "arguments": [{"value": 200, "name": "status_code", "original": "200"}]}, "result": {"status": "passed", "duration": 0.001234292984008789}}, {"keyword": "And", "step_type": "then", "name": "the response should contain a list of photos", "location": "features/Typicode_API_Testing.feature:121", "match": {"location": "features/steps/Typicode_API_Testing_Steps.py:498", "arguments": []}, "result": {"status": "passed", "duration": 0.004365205764770508}}, {"keyword": "And", "step_type": "then", "name": "each photo should have required fields \"id\", \"title\", \"url\", \"thumbnailUrl\", \"albumId\"", "location": "features/Typicode_API_Testing.feature:122", "match": {"location": "features/steps/Typicode_API_Testing_Steps.py:505", "arguments": [{"value": "id\", \"title\", \"url\", \"thumbnailUrl\", \"albumId", "name": "field_list"}]}, "result": {"status": "passed", "duration": 0.004947185516357422}}], "status": "passed"}, {"type": "scenario", "keyword": "Scenario", "name": "Test invalid API endpoints", "tags": ["api", "negative", "invalid_endpoints"], "location": "features/Typicode_API_Testing.feature:125", "steps": [{"keyword": "Given", "step_type": "given", "name": "the API client is configured for testing environment", "location": "features/Typicode_API_Testing.feature:5", "match": {"location": "features/steps/Typicode_API_Testing_Steps.py:13", "arguments": []}, "result": {"status": "passed", "duration": 0.0004584789276123047}}, {"keyword": "When", "step_type": "when", "name": "user send GET request to \"/invalid-endpoint\"", "location": "features/Typicode_API_Testing.feature:126", "match": {"location": "features/steps/Typicode_API_Testing_Steps.py:29", "arguments": [{"value": "/invalid-endpoint", "name": "endpoint"}]}, "result": {"status": "passed", "duration": 0.8359858989715576}}, {"keyword": "Then", "step_type": "then", "name": "the response status code should be 404", "location": "features/Typicode_API_Testing.feature:127", "match": {"location": "features/steps/Todos_API_Testing_Steps.py:66", "arguments": [{"value": 404, "name": "status_code", "original": "404"}]}, "result": {"status": "passed", "duration": 0.0009050369262695312}}, {"keyword": "When", "step_type": "when", "name": "user send GET request to \"/users/999999\"", "location": "features/Typicode_API_Testing.feature:128", "match": {"location": "features/steps/Typicode_API_Testing_Steps.py:29", "arguments": [{"value": "/users/999999", "name": "endpoint"}]}, "result": {"status": "passed", "duration": 0.8941450119018555}}, {"keyword": "Then", "step_type": "then", "name": "the response status code should be 404", "location": "features/Typicode_API_Testing.feature:129", "match": {"location": "features/steps/Todos_API_Testing_Steps.py:66", "arguments": [{"value": 404, "name": "status_code", "original": "404"}]}, "result": {"status": "passed", "duration": 0.0009462833404541016}}], "status": "passed"}, {"type": "scenario", "keyword": "Scenario", "name": "Test API with invalid data", "tags": ["api", "negative", "invalid_data"], "location": "features/Typicode_API_Testing.feature:132", "steps": [{"keyword": "Given", "step_type": "given", "name": "the API client is configured for testing environment", "location": "features/Typicode_API_Testing.feature:5", "match": {"location": "features/steps/Typicode_API_Testing_Steps.py:13", "arguments": []}, "result": {"status": "passed", "duration": 0.0005424022674560547}}, {"keyword": "When", "step_type": "when", "name": "I send POST request to \"/users\" with invalid data", "location": "features/Typicode_API_Testing.feature:133", "table": {"headings": ["field", "value"], "rows": [["name", ""], ["email", "invalid-email"]]}, "match": {"location": "features/steps/Typicode_API_Testing_Steps.py:517", "arguments": [{"value": "/users", "name": "endpoint"}]}, "result": {"status": "passed", "duration": 0.36931729316711426}}, {"keyword": "Then", "step_type": "then", "name": "the response status code should be 400", "location": "features/Typicode_API_Testing.feature:137", "match": {"location": "features/steps/Todos_API_Testing_Steps.py:66", "arguments": [{"value": 400, "name": "status_code", "original": "400"}]}, "result": {"status": "failed", "duration": 0.006889820098876953, "error_message": "ASSERT FAILED: Expected status 400, but got 201"}}, {"keyword": "And", "step_type": "then", "name": "response should contain validation errors", "location": "features/Typicode_API_Testing.feature:138"}], "status": "failed"}, {"type": "scenario", "keyword": "Scenario", "name": "Validate API response data types", "tags": ["api", "regression", "data_validation"], "location": "features/Typicode_API_Testing.feature:141", "steps": [{"keyword": "Given", "step_type": "given", "name": "the API client is configured for testing environment", "location": "features/Typicode_API_Testing.feature:5", "match": {"location": "features/steps/Typicode_API_Testing_Steps.py:13", "arguments": []}, "result": {"status": "passed", "duration": 0.0004858970642089844}}, {"keyword": "When", "step_type": "when", "name": "user send GET request to \"/users/1\"", "location": "features/Typicode_API_Testing.feature:142", "match": {"location": "features/steps/Typicode_API_Testing_Steps.py:29", "arguments": [{"value": "/users/1", "name": "endpoint"}]}, "result": {"status": "passed", "duration": 0.17374086380004883}}, {"keyword": "Then", "step_type": "then", "name": "the response status code should be 200", "location": "features/Typicode_API_Testing.feature:143", "match": {"location": "features/steps/Todos_API_Testing_Steps.py:66", "arguments": [{"value": 200, "name": "status_code", "original": "200"}]}, "result": {"status": "passed", "duration": 0.0011096000671386719}}, {"keyword": "And", "step_type": "then", "name": "field \"id\" should be of type \"integer\"", "location": "features/Typicode_API_Testing.feature:144", "match": {"location": "features/steps/Typicode_API_Testing_Steps.py:540", "arguments": [{"value": "id", "name": "field"}, {"value": "integer", "name": "expected_type"}]}, "result": {"status": "passed", "duration": 0.006243467330932617}}, {"keyword": "And", "step_type": "then", "name": "field \"name\" should be of type \"string\"", "location": "features/Typicode_API_Testing.feature:145", "match": {"location": "features/steps/Typicode_API_Testing_Steps.py:540", "arguments": [{"value": "name", "name": "field"}, {"value": "string", "name": "expected_type"}]}, "result": {"status": "passed", "duration": 0.00635218620300293}}, {"keyword": "And", "step_type": "then", "name": "field \"email\" should be of type \"string\"", "location": "features/Typicode_API_Testing.feature:146", "match": {"location": "features/steps/Typicode_API_Testing_Steps.py:540", "arguments": [{"value": "email", "name": "field"}, {"value": "string", "name": "expected_type"}]}, "result": {"status": "passed", "duration": 0.006162405014038086}}, {"keyword": "And", "step_type": "then", "name": "field \"email\" should be a valid email format", "location": "features/Typicode_API_Testing.feature:147", "match": {"location": "features/steps/Typicode_API_Testing_Steps.py:556", "arguments": [{"value": "email", "name": "field"}]}, "result": {"status": "passed", "duration": 0.009015560150146484}}], "status": "passed"}, {"type": "scenario", "keyword": "Scenario", "name": "Validate API response times", "tags": ["api", "performance", "response_time"], "location": "features/Typicode_API_Testing.feature:150", "steps": [{"keyword": "Given", "step_type": "given", "name": "the API client is configured for testing environment", "location": "features/Typicode_API_Testing.feature:5", "match": {"location": "features/steps/Typicode_API_Testing_Steps.py:13", "arguments": []}, "result": {"status": "passed", "duration": 0.00093841552734375}}, {"keyword": "When", "step_type": "when", "name": "user send GET request to \"/users\"", "location": "features/Typicode_API_Testing.feature:151", "match": {"location": "features/steps/Typicode_API_Testing_Steps.py:29", "arguments": [{"value": "/users", "name": "endpoint"}]}, "result": {"status": "passed", "duration": 0.1838078498840332}}, {"keyword": "Then", "step_type": "then", "name": "the response time should be less than 1 second", "location": "features/Typicode_API_Testing.feature:152", "match": {"location": "features/steps/Typicode_API_Testing_Steps.py:567", "arguments": [{"value": 1, "name": "max_time", "original": "1"}]}, "result": {"status": "passed", "duration": 0.0008656978607177734}}, {"keyword": "When", "step_type": "when", "name": "user send GET request to \"/posts\"", "location": "features/Typicode_API_Testing.feature:153", "match": {"location": "features/steps/Typicode_API_Testing_Steps.py:29", "arguments": [{"value": "/posts", "name": "endpoint"}]}, "result": {"status": "passed", "duration": 0.18983125686645508}}, {"keyword": "Then", "step_type": "then", "name": "the response time should be less than 1 second", "location": "features/Typicode_API_Testing.feature:154", "match": {"location": "features/steps/Typicode_API_Testing_Steps.py:567", "arguments": [{"value": 1, "name": "max_time", "original": "1"}]}, "result": {"status": "passed", "duration": 0.0006394386291503906}}, {"keyword": "When", "step_type": "when", "name": "user send GET request to \"/comments\"", "location": "features/Typicode_API_Testing.feature:155", "match": {"location": "features/steps/Typicode_API_Testing_Steps.py:29", "arguments": [{"value": "/comments", "name": "endpoint"}]}, "result": {"status": "passed", "duration": 0.2174973487854004}}, {"keyword": "Then", "step_type": "then", "name": "the response time should be less than 2 seconds", "location": "features/Typicode_API_Testing.feature:156", "match": {"location": "features/steps/Todos_API_Testing_Steps.py:945", "arguments": [{"value": 2, "name": "max_seconds", "original": "2"}]}, "result": {"status": "passed", "duration": 0.0011029243469238281}}], "status": "passed"}, {"type": "scenario", "keyword": "Scenario", "name": "Test API pagination", "tags": ["api", "regression", "pagination"], "location": "features/Typicode_API_Testing.feature:159", "steps": [{"keyword": "Given", "step_type": "given", "name": "the API client is configured for testing environment", "location": "features/Typicode_API_Testing.feature:5", "match": {"location": "features/steps/Typicode_API_Testing_Steps.py:13", "arguments": []}, "result": {"status": "passed", "duration": 0.0004413127899169922}}, {"keyword": "When", "step_type": "when", "name": "user send GET request to \"/posts?_page=1&_limit=10\"", "location": "features/Typicode_API_Testing.feature:160", "match": {"location": "features/steps/Typicode_API_Testing_Steps.py:29", "arguments": [{"value": "/posts?_page=1&_limit=10", "name": "endpoint"}]}, "result": {"status": "passed", "duration": 0.21787238121032715}}, {"keyword": "Then", "step_type": "then", "name": "the response status code should be 200", "location": "features/Typicode_API_Testing.feature:161", "match": {"location": "features/steps/Todos_API_Testing_Steps.py:66", "arguments": [{"value": 200, "name": "status_code", "original": "200"}]}, "result": {"status": "passed", "duration": 0.0007586479187011719}}, {"keyword": "And", "step_type": "then", "name": "the response should contain exactly 10 posts", "location": "features/Typicode_API_Testing.feature:162", "match": {"location": "features/steps/Typicode_API_Testing_Steps.py:574", "arguments": [{"value": 10, "name": "expected_count", "original": "10"}]}, "result": {"status": "passed", "duration": 0.004365205764770508}}, {"keyword": "When", "step_type": "when", "name": "user send GET request to \"/posts?_page=2&_limit=5\"", "location": "features/Typicode_API_Testing.feature:163", "match": {"location": "features/steps/Typicode_API_Testing_Steps.py:29", "arguments": [{"value": "/posts?_page=2&_limit=5", "name": "endpoint"}]}, "result": {"status": "passed", "duration": 0.869469404220581}}, {"keyword": "Then", "step_type": "then", "name": "the response status code should be 200", "location": "features/Typicode_API_Testing.feature:164", "match": {"location": "features/steps/Todos_API_Testing_Steps.py:66", "arguments": [{"value": 200, "name": "status_code", "original": "200"}]}, "result": {"status": "passed", "duration": 0.0012423992156982422}}, {"keyword": "And", "step_type": "then", "name": "the response should contain exactly 5 posts", "location": "features/Typicode_API_Testing.feature:165", "match": {"location": "features/steps/Typicode_API_Testing_Steps.py:574", "arguments": [{"value": 5, "name": "expected_count", "original": "5"}]}, "result": {"status": "passed", "duration": 0.005683422088623047}}], "status": "passed"}, {"type": "scenario", "keyword": "Scenario", "name": "Test API filtering and searching", "tags": ["api", "regression", "filtering"], "location": "features/Typicode_API_Testing.feature:168", "steps": [{"keyword": "Given", "step_type": "given", "name": "the API client is configured for testing environment", "location": "features/Typicode_API_Testing.feature:5", "match": {"location": "features/steps/Typicode_API_Testing_Steps.py:13", "arguments": []}, "result": {"status": "passed", "duration": 0.0005364418029785156}}, {"keyword": "When", "step_type": "when", "name": "user send GET request to \"/posts?userId=1\"", "location": "features/Typicode_API_Testing.feature:169", "match": {"location": "features/steps/Typicode_API_Testing_Steps.py:29", "arguments": [{"value": "/posts?userId=1", "name": "endpoint"}]}, "result": {"status": "passed", "duration": 0.12530922889709473}}, {"keyword": "Then", "step_type": "then", "name": "the response status code should be 200", "location": "features/Typicode_API_Testing.feature:170", "match": {"location": "features/steps/Todos_API_Testing_Steps.py:66", "arguments": [{"value": 200, "name": "status_code", "original": "200"}]}, "result": {"status": "passed", "duration": 0.0008673667907714844}}, {"keyword": "And", "step_type": "then", "name": "all posts should have \"userId\" equal to 1", "location": "features/Typicode_API_Testing.feature:171", "match": {"location": "features/steps/Typicode_API_Testing_Steps.py:583", "arguments": [{"value": "userId", "name": "field"}, {"value": 1, "name": "expected_value", "original": "1"}]}, "result": {"status": "passed", "duration": 0.0035653114318847656}}, {"keyword": "When", "step_type": "when", "name": "user send GET request to \"/users?name=Leanne Graham\"", "location": "features/Typicode_API_Testing.feature:172", "match": {"location": "features/steps/Typicode_API_Testing_Steps.py:29", "arguments": [{"value": "/users?name=Leanne Graham", "name": "endpoint"}]}, "result": {"status": "passed", "duration": 0.3080618381500244}}, {"keyword": "Then", "step_type": "then", "name": "the response status code should be 200", "location": "features/Typicode_API_Testing.feature:173", "match": {"location": "features/steps/Todos_API_Testing_Steps.py:66", "arguments": [{"value": 200, "name": "status_code", "original": "200"}]}, "result": {"status": "passed", "duration": 0.0010111331939697266}}, {"keyword": "And", "step_type": "then", "name": "the response should contain users with name \"Leanne Graham\"", "location": "features/Typicode_API_Testing.feature:174", "match": {"location": "features/steps/Typicode_API_Testing_Steps.py:594", "arguments": [{"value": "Leanne Graham", "name": "expected_name"}]}, "result": {"status": "passed", "duration": 0.006085634231567383}}], "status": "passed"}, {"type": "scenario", "keyword": "Scenario", "name": "Verify UI and API data consistency", "tags": ["api", "integration", "ui_api_sync"], "location": "features/Typicode_API_Testing.feature:177", "steps": [{"keyword": "Given", "step_type": "given", "name": "the API client is configured for testing environment", "location": "features/Typicode_API_Testing.feature:5", "match": {"location": "features/steps/Typicode_API_Testing_Steps.py:13", "arguments": []}, "result": {"status": "passed", "duration": 0.0005373954772949219}}, {"keyword": "Given", "step_type": "given", "name": "I have created a user via API", "location": "features/Typicode_API_Testing.feature:178", "match": {"location": "features/steps/Typicode_API_Testing_Steps.py:192", "arguments": []}, "result": {"status": "passed", "duration": 0.31929492950439453}}, {"keyword": "When", "step_type": "when", "name": "I navigate to the user profile page in UI", "location": "features/Typicode_API_Testing.feature:179", "match": {"location": "features/steps/Typicode_API_Testing_Steps.py:603", "arguments": []}, "result": {"status": "passed", "duration": 0.0004470348358154297}}, {"keyword": "Then", "step_type": "then", "name": "the UI should display the same user information as API", "location": "features/Typicode_API_Testing.feature:180", "match": {"location": "features/steps/Typicode_API_Testing_Steps.py:614", "arguments": []}, "result": {"status": "passed", "duration": 0.11997222900390625}}, {"keyword": "And", "step_type": "then", "name": "the user name should match between UI and API", "location": "features/Typicode_API_Testing.feature:181", "match": {"location": "features/steps/Typicode_API_Testing_Steps.py:629", "arguments": []}, "result": {"status": "passed", "duration": 0.14906835556030273}}, {"keyword": "And", "step_type": "then", "name": "the user email should match between UI and API", "location": "features/Typicode_API_Testing.feature:182", "match": {"location": "features/steps/Typicode_API_Testing_Steps.py:639", "arguments": []}, "result": {"status": "passed", "duration": 0.1710834503173828}}], "status": "passed"}]}
]
